/*
 * Nuts consent bridge
 * Copyright (C) 2019 Nuts community
 *
 *  This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */


buildscript {
    ext {
        kotlinVersion = '1.2.71'
        corda = '4.0'
        cordaGradlePluginsVersion = '4.0.25'
        springBootVersion = '2.1.3.RELEASE'
        springBootGradlePluginVersion = '2.1.3.RELEASE'
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "net.corda.plugins:cordapp:$cordaGradlePluginsVersion"
        classpath "net.corda.plugins:cordformation:$cordaGradlePluginsVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootGradlePluginVersion"
    }
}

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin on the JVM.
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
}

ext {
    jacksonVersion = '2.9.8'
    slf4j_version = '1.7.25'
    log4j_version = '2.9.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url "https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases/"
    }
}

// exclude unneeded libs
configurations {
    implementation {
        exclude group: 'com.github.corda.crash'
        exclude group: 'com.github.bft-smart', module: 'library'
        exclude group: 'ch.qos.logback'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }

    testImplementation {
        exclude group: 'com.github.corda.crash'
        exclude group: 'com.github.bft-smart', module: 'library'
    }
}

allprojects {
    apply plugin: 'jacoco'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled true
            csv.enabled false
        }
    }
}


test {
    jvmArgs "-javaagent:/Users/wout.slakhorst/nedap_healthcare/corda/lib/quasar.jar",
            "-Dco.paralleluniverse.fibers.verifyInstrumentation=true"
}

apply plugin: 'net.corda.plugins.cordapp'
//apply plugin: 'net.corda.plugins.cordformation'

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation("org.springframework.boot:spring-boot-starter:${springBootVersion}")

    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")

    cordaCompile("net.corda:corda-node-api:$corda")
    cordaCompile("net.corda:corda-node:$corda")
    implementation("org.apache.qpid:proton-j:0.27.3")

    implementation "org.slf4j:jul-to-slf4j:$slf4j_version"

    testImplementation("net.corda:corda-test-utils:$corda")
    testImplementation("net.corda:corda-node-driver:$corda")
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    testImplementation group: 'org.apache.mina', name: 'mina-core', version: '2.1.0'
    testImplementation group: 'javax.json', name: 'javax.json-api', version: '1.1.4'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

check.dependsOn jacocoTestReport