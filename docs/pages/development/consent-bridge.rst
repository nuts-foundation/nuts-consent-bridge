.. _nuts-consent-bridge-development:

Nuts consent bridge development
###############################

.. marker-for-readme

The consent bridge is written in Kotlin and can be build by Gradle.

Dependencies
************

Since the bridge depends on Corda, Java 1.8 is needed. For the Oracle sdk, this means that your version needs to be > 1.8 update 151.
This can give problems on several linux distro's. In that case use the latest OpenJDK 1.8.

The project is build with Gradle. A gradle wrapper is present in the project.

Generating code
***************

Api stubs are generated by running

.. code-block:: shell

    ./gradlew codegen

Running tests
*************


To run all tests, including integration tests, `nats-streaming-server <https://nats-io.github.io/docs/nats_streaming/gettingstarted/install.html#nats-streaming-server-installation>`_ is required to be installed.
Tests can be run by executing

.. code-block:: shell

    ./gradlew test

Building
********

Executable can be build by executing

.. code-block:: shell

    ./gradlew bootJar

Docker
******

To build locally

.. code-block:: shell

    docker build . -f docker/Dockerfile-dev

The ``nutsfoundation/nuts-consent-bridge:latest-dev`` docker image can be used to connect to one of the 2 consent nodes locally. Checkout :ref:`nuts-network-local-development-docker` for setting up a complete environment with ``docker-compose``.

README
******

The readme is auto-generated from a template and uses the documentation to fill in the blanks.

.. code-block:: shell

    ./generate_readme.sh

Documentation
*************

To generate the documentation, you'll need python3, sphinx and a bunch of other stuff. See :ref:`nuts-documentation-development-documentation`
The documentation can be build by running

.. code-block:: shell

    /docs $ make html

The resulting html will be available from ``docs/_build/html/index.html``

